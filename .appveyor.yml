# Continuous integration for Windows using http://appveyor.com/

# Not a .NET project, we build ci-helpers in the install step instead
build: false

# Only build pushes to the master branch. Will still build tags and pull requests.
branches:
    only:
        - master

environment:
    matrix:
        - MINICONDA: C:\Miniconda36-x64
          PYTHON: 3.7
          CONDA_REQUIREMENTS: requirements.txt
        - MINICONDA: C:\Miniconda36-x64
          PYTHON: 3.6
          CONDA_REQUIREMENTS: requirements.txt
        - MINICONDA: C:\Miniconda35-x64
          PYTHON: 3.5
          CONDA_REQUIREMENTS: requirements.txt
        - MINICONDA: C:\Miniconda-x64
          PYTHON: 2.7
          CONDA_REQUIREMENTS: requirements27.txt

init:
    # Add miniconda to the PATH
    - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%MINICONDA%\\Library\\bin;%PATH%"
    - set CONDA_REQUIREMENTS_DEV=requirements-dev.txt

install:
    # Get the Fatiando CI scripts
    - cmd: git clone --branch=1.0.0 --depth=1 https://github.com/fatiando/continuous-integration.git
    # Setup miniconda and install the requirements into a new environment
    - cmd: continuous-integration\appveyor\setup-miniconda.bat
    # Activate the new environment
    - cmd: activate testing
    # Show installed pkg information for postmortem diagnostic
    - cmd: conda list
    # Make a source package for the project and install it
    - cmd: python setup.py sdist --formats=zip
    - ps: ls dist
    - ps: pip install --no-deps (Get-ChildItem dist\*.zip)


test_script:
    # Run the tests inside a tmp folder to make sure we're testing the installed version
    - ps: mkdir -p tmp; cd tmp; python -c "import pooch; pooch.test()"
