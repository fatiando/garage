# Configuration for publishing archives to PyPI and documentation pages to
# GitHub Pages using GitHub Actions
name: deploy

# Only run for pushes to the master branch and releases.
on:
  push:
    branches:
      - master
      # FOR TESTING REMOVE BEFORE MERGING
      - deploy-docs
  release:
    types:
      - published

jobs:

  #############################################################################
  # Publish built wheels and source archives to PyPI and test PyPI
  pypi:
    name: PyPI
    runs-on: ubuntu-latest
    # Only publish from the origin repository, not forks
    if: github.repository == 'fatiando/pooch'

    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Need to fetch more than the last commit so that versioneer can
          # create the correct version string. If the number of commits since
          # the last release is greater than this, the version will still be wrong.
          # Increase if necessary.
          fetch-depth: 100

      # Need the tags so that versioneer can form a valid version number
      - name: Fetch git tags
        run: git fetch origin 'refs/tags/*:refs/tags/*'

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install requirements
        run: python -m pip install setuptools twine wheel

      - name: List installed packages
        run: python -m pip freeze

      - name: Build source and wheel distributions
        run: |
          # Change the versioneer format to "pre" so that the commit hash isn't
          # included (PyPI doesn't allow it). Can't do this permanently because
          # we rely the hash to indicate to the tests that this is a local
          # verison instead of a published version.
          sed --in-place "s/pep440/pep440-pre/g" setup.cfg
          python setup.py sdist bdist_wheel
          echo ""
          echo "Generated files:"
          ls -lh dist/

      - name: Check the archives
        run: twine check dist/*

      #- name: Publish to Test PyPI
        #if: success()
        ## Pin to a specific commit to avoid having the authentication token
        ## stolen if the Action is compromised:
        ## https://github.com/pypa/gh-action-pypi-publish/issues/27#issuecomment-596082795
        #uses: pypa/gh-action-pypi-publish@bce3b74dbf8cc32833ffba9d15f83425c1a736e0
        #with:
          #user: __token__
          #password: ${{ secrets.TEST_PYPI_TOKEN}}
          #repository_url: https://test.pypi.org/legacy/
          ## Allow existing releases on test PyPI without errors.
          ## NOT TO BE USED in PyPI!
          #skip_existing: true

      #- name: Publish to PyPI
        ## Only publish to PyPI when a release triggers the build
        #if: success() && github.event_name == 'release'
        #uses: pypa/gh-action-pypi-publish@bce3b74dbf8cc32833ffba9d15f83425c1a736e0
        #with:
          #user: __token__
          #password: ${{ secrets.PYPI_TOKEN}}

  #############################################################################
  # Publish the documentation to gh-pages
  docs:
    name: docs
    runs-on: ubuntu-latest
    # Only publish from the origin repository, not forks
    if: github.repository == 'fatiando/pooch'

    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE
      - name: Checkout
        uses: actions/checkout@v2

      # Download the built docs from the test workflow
      - name: Download built documentation artifacts
        uses: actions/download-artifact@v2
        with:
          name: docs-ubuntu-3.8

      - name: What's in here
        run: ls -R

      #- name: Push to gh-pages
        ##if: success() && github.event_name == 'push'
        #uses: peaceiris/actions-gh-pages@8a36f3edfc5d1cbae6b09e6f5a7d7b19e5b7a73b
        #with:
          #github_token: ${{ secrets.GITHUB_TOKEN }}
          #publish_dir: ./output
          #user_name: 'github-actions[bot]'
          #user_email: 'github-actions[bot]@users.noreply.github.com'
